/*
Union flood polygons so there are no overlapping geometeries within riskscores,
and each resultant polygon has the flood history for each riskscore category in
that area.
 */
 
 -- DROP TABLES

DROP TABLE IF EXISTS PROC.UNIONED_FLOODPLAINS CASCADE;

DROP TABLE IF EXISTS CLEAN.FLOODPLAINS CASCADE;


-- CREATE TABLES

CREATE TABLE PROC.UNIONED_FLOODPLAINS (
	OID serial PRIMARY KEY,
	RISKSCORE integer,
	CENTROID GEOMETRY(POINT, 2876) NOT NULL,
	GEOM GEOMETRY(POLYGON, 2876) NOT NULL
);

CREATE TABLE CLEAN.FLOODPLAINS (
	OID serial PRIMARY KEY,
	RISKSCORE integer,
	FROMDATE date,
	TODATE date,
	GEOM GEOMETRY(POLYGON, 2876) NOT NULL
);


-- CREATE SPATIAL INDEXES

CREATE INDEX UNIONED_FLOODPLAINS_CENTROID_IDX ON PROC.UNIONED_FLOODPLAINS USING GIST(CENTROID);
CREATE INDEX UNIONED_FLOODPLAINS_GEOM_IDX ON PROC.UNIONED_FLOODPLAINS USING GIST(GEOM);

CREATE INDEX FLOODPLAINS_GEOM_IDX ON CLEAN.FLOODPLAINS USING GIST(GEOM);


-- INSERT DATA WITH SQL WIZARDRY

INSERT INTO PROC.UNIONED_FLOODPLAINS (RISKSCORE, CENTROID, GEOM)
-- with help from https://gis.stackexchange.com/a/785/114009
SELECT RISKSCORE, ST_POINTONSURFACE(UNIONED.GEOM), UNIONED.GEOM
FROM (
	-- 2) polygonize those results and dump them into single part
 	SELECT BNDY.RISKSCORE, (ST_DUMP(ST_POLYGONIZE(BNDY.GEOM))).GEOM
	FROM (
		-- 1) get the boundaries of all polygons into a layer of lines separated by risk score
		SELECT RISKSCORE, ST_UNION(ST_BOUNDARY(GEOM)) GEOM
		FROM PROC.FLOODPLAINS
		GROUP BY RISKSCORE
		) BNDY
	GROUP BY RISKSCORE
) UNIONED;

INSERT INTO CLEAN.FLOODPLAINS
SELECT UF.OID,
	UF.RISKSCORE,
	MIN(F.FROMDATE),
	NULLIF(MAX(COALESCE(F.TODATE, '9999-01-01'::date)), '9999-01-01'::date),
	UF.GEOM
FROM PROC.UNIONED_FLOODPLAINS UF
INNER JOIN PROC.FLOODPLAINS F
ON ST_INTERSECTS(UF.CENTROID, F.GEOM) AND UF.RISKSCORE = F.RISKSCORE
GROUP BY UF.OID,
	UF.RISKSCORE,
	UF.GEOM;